#include <iostream>
#include <vector>
#include <string>
#include <cstdio>

using namespace std;

vector<int > getPi(string p) {
	int m = (int)p.size();
	int j = 0;

	vector<int> pi(m, 0);
	for (int i = 1; i < m; i++) {
		while (j > 0 && p[i] != p[j])
			j = pi[j - 1];

		if (p[i] == p[j])
			pi[i] = ++j;
	}

	return pi;
}

vector<int> KMP(string s, string p) {
	vector<int> ans;
	auto pi = getPi(p);
	int n = (int)s.size(), m = (int)p.size(), j = 0;
	
	for (int i = 0; i < n; i++) {
		
		while (j > 0 && s[i] != p[j])
			j = pi[j - 1];

		if (s[i] == p[j]) {
			if (j == m - 1) {
				//ans.push_back(i - m + 1);
				ans.push_back(i - j)
				j = pi[j];
			} else {
				j++;
			}
		}

	}

	return ans;
}

int main(void) {
	/*
	string test = "ABABABABBABABABABC";
	string text = "ABABABABC";
	*/
	string test = "CTCACTGCCTGCCTAG";
	string text = "CTGCCTAG";

	auto pi = getPi(test);
	auto ans = KMP(test, text);

	for (int i = 0; i < ans.size(); i++)
		cout << ans[i] << " ";
	cout << endl;

	cout << endl;
	for (int i = 0; i < pi.size(); i++)
		cout << pi[i] << " ";
	cout << endl;

	return 0;
}

/*
	
	*/

vector<int> strCMP(string s, string p) {
	vector<int> ans;
	int j = 0;
	auto pi = getPi(s);
	int n = s.size(), m = p.size();


	for (int i = 0; i < n; i++) {
		while (j > 0 && s[i] != p[j])
			j = pi[j - 1];

		if (s[i] == p[j]) {
			if (j == m - 1) {
				ans.push_back(i - m + 1);
				j = pi[j];
			}
			else j++;
		}
	}

	return ans;
}